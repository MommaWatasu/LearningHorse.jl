using LearningHorse
using Test

@testset "LearningHorse.jl" begin
    mean = Loss_Function.MSE([1,2,3,4], [1,2,3,4], [1,2])
    @test mean == 4
    x = [15.43 23.01 5.0 12.56 8.67 7.31 9.66 13.64 14.92 18.47 15.48 22.13 10.11 26.95 5.68 21.76]
    t = [170.91 160.68 129.0 159.7 155.46 140.56 153.65 159.43 164.7 169.65 160.71 173.29 159.31 171.52 138.96 165.87]
    w =Linear_Regression.SGD.fit(x, t)
    p = Linear_Regression.SGD.predict(x, w)
    println(typeof(p), p)
    @test 1 < w[1] < 2
    @test 100 < w[2]
    x =[15.43 23.01 5.0 12.56 8.67 7.31 9.66 13.64 14.92 18.47 15.48 22.13 10.11 26.95 5.68 21.76; 70.43 58.15 37.22 56.51 57.32 40.84 57.79 56.94 63.03 65.69 62.33 64.95 57.73 66.89 46.68 61.08]
    t = [170.91 160.68 129.0 159.7 155.46 140.56 153.65 159.43 164.7 169.65 160.71 173.29 159.31 171.52 138.96 165.87]
    w = Linear_Regression.MR.fit(x, t)
    println(typeof(w))
    p = Linear_Regression.MR.predict(x, w)
    print(p)
    w = Linear_Regression.LR.fit(x, t)
    println(w)
    p = Linear_Regression.LR.predict(x, w)
    println(typeof(p))
    println(p)
    x = [5.1 1.4; 4.9 1.4; 4.7 1.3; 4.6 1.5; 5.0 1.4; 5.4 1.7; 4.6 1.4; 5.0 1.5; 4.4 1.4; 4.9 1.5; 5.4 1.5; 4.8 1.6; 4.8 1.4; 4.3 1.1; 5.8 1.2; 5.7 1.5; 5.4 1.3; 5.1 1.4; 5.7 1.7; 5.1 1.5; 5.4 1.7; 5.1 1.5; 4.6 1.0; 5.1 1.7; 4.8 1.9; 5.0 1.6; 5.0 1.6; 5.2 1.5; 5.2 1.4; 4.7 1.6; 4.8 1.6; 5.4 1.5; 5.2 1.5; 5.5 1.4; 4.9 1.5; 5.0 1.2; 5.5 1.3; 4.9 1.4; 4.4 1.3; 5.1 1.5; 5.0 1.3; 4.5 1.3; 4.4 1.3; 5.0 1.6; 5.1 1.9; 4.8 1.4; 5.1 1.6; 4.6 1.4; 5.3 1.5; 5.0 1.4; 7.0 4.7; 6.4 4.5; 6.9 4.9; 5.5 4.0; 6.5 4.6; 5.7 4.5; 6.3 4.7; 4.9 3.3; 6.6 4.6; 5.2 3.9; 5.0 3.5; 5.9 4.2; 6.0 4.0; 6.1 4.7; 5.6 3.6; 6.7 4.4; 5.6 4.5; 5.8 4.1; 6.2 4.5; 5.6 3.9; 5.9 4.8; 6.1 4.0; 6.3 4.9; 6.1 4.7; 6.4 4.3; 6.6 4.4; 6.8 4.8; 6.7 5.0; 6.0 4.5; 5.7 3.5; 5.5 3.8; 5.5 3.7; 5.8 3.9; 6.0 5.1; 5.4 4.5; 6.0 4.5; 6.7 4.7; 6.3 4.4; 5.6 4.1; 5.5 4.0; 5.5 4.4; 6.1 4.6; 5.8 4.0; 5.0 3.3; 5.6 4.2; 5.7 4.2; 5.7 4.2; 6.2 4.3; 5.1 3.0; 5.7 4.1; 6.3 6.0; 5.8 5.1; 7.1 5.9; 6.3 5.6; 6.3 5.8; 7.6 6.6; 4.9 4.5; 7.3 6.3; 6.7 5.8; 7.2 6.1; 6.5 5.1; 6.4 5.3; 6.8 5.5; 5.7 5.0; 5.8 5.1; 6.4 5.3; 6.5 5.5; 7.7 6.7; 7.7 6.9; 6.0 5.0; 6.9 5.7; 5.6 4.9; 7.7 6.7; 6.3 4.9; 6.7 5.7; 7.2 6.0; 6.2 4.8; 6.1 4.9; 6.4 5.6; 7.2 5.8; 7.4 6.1; 7.9 6.4; 6.4 5.6; 6.3 5.1; 6.1 5.6; 7.7 6.1; 6.3 5.6; 6.4 5.5; 6.0 4.8; 6.9 5.4; 6.7 5.6; 6.9 5.1; 5.8 5.1; 6.8 5.9; 6.7 5.7; 6.7 5.2; 6.3 5.0; 6.5 5.2; 6.2 5.4; 5.9 5.1]
    t = [0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2]
    t = Classification.CTOH(t)
    w = Classification.SGD.fit(x, t, 3)
    println(w)
    p = Classification.SGD.predict(x, w)
    println(p)

    # Write your tests here.
end
